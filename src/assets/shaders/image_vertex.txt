attribute vec3 a_position;
attribute vec2 a_texcoord;
attribute vec3 a_normal;

uniform mat4 u_matrix;
uniform mat4 u_view;
uniform vec3 u_cameraPos;
uniform mat4 u_model;

varying vec2 v_texcoord;
varying float v_height;
varying vec3 v_normal;
varying float v_depth;
varying float v_fogDistance;
varying vec4 v_worldSpace;
varying vec3 v_worldNormal;
varying vec3 v_cameraPos;
varying vec3 v_fragPos;

void main() {
   v_worldSpace = u_model * vec4(a_position, 1.0);
   v_worldNormal = a_normal;
   v_texcoord = a_texcoord;
   v_height = a_position.y;
   v_normal = a_normal;
   v_depth = a_position.z;
   vec4 viewPos = u_view * vec4(a_position, 1.0);
   vec3 meshPosition = vec3(u_model[3]);
   v_cameraPos = u_cameraPos;
   vec4 position = u_matrix * u_model * vec4(a_position, 1.0);
   v_fogDistance = length(v_worldSpace.xyz - u_cameraPos);
   v_fragPos = a_position.xyz;
   gl_Position = u_matrix * u_model * vec4(a_position, 1.0);
}