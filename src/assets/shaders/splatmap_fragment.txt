precision mediump float;

varying vec2 v_texcoord;
varying float v_height;

varying vec3 v_normal;
varying float v_fogDistance;

uniform sampler2D u_texture;
uniform sampler2D u_splatmap;
uniform float u_time;

void main() {
    vec2 pixelResolution = vec2(6144, 2048);
    vec2 pixelOffset = 1.0 / pixelResolution;
    vec2 padding = pixelOffset * 0.5;
    vec2 tileSize = vec2(1.0 / 6.0, 1.0 / 2.0);
    vec2 uv_leafs = fract(v_texcoord) * (tileSize - 2.0 * padding) + vec2(0.0, 0.0) * tileSize + padding;
    vec2 uv_sand = fract(v_texcoord) * (tileSize - 2.0 * padding)+ vec2(4.0, 0.0) * tileSize + padding;
    vec2 uv_ground = fract(v_texcoord) * (tileSize - 2.0 * padding) + vec2(1.0, 1.0) * tileSize + padding;
    vec2 uv_water = fract(v_texcoord + vec2(u_time * 0.1, u_time * 0.2)) * (tileSize - 2.0 * padding) + vec2(5.0, 0.0) * tileSize + padding;
    vec3 lightDir = normalize(vec3(0, 3, 1));
    float light = dot(lightDir, v_normal * 2. - 1.0);

    vec4 leaf_color = texture2D(u_texture, uv_leafs);
    vec4 sand_color = texture2D(u_texture, uv_sand);
    vec4 snow_color = texture2D(u_texture, uv_ground);

    // Steg 3: Läs färg från texturen
    vec4 water_color = texture2D(u_texture, uv_water);

    vec4 splat = texture2D(u_splatmap, v_texcoord / 20.0);

    vec4 result =
        leaf_color * splat.r +
        sand_color  * splat.g +
        snow_color  * splat.b +
        water_color * splat.a;

    float fogFactor = 1.0 - exp(-v_fogDistance * 0.005);
    float heightFactor = 1.0 - smoothstep(0.0, 50.0, v_height);
    fogFactor *= heightFactor;

    vec3 fogColor = vec3(0.5, 0.6, 0.75);
    vec3 color = mix(result.rgb, fogColor, fogFactor);

    gl_FragColor = vec4(color.rgb * (light * 1.0 + 0.5), 1);
    //gl_FragColor = texture2D(u_splatmap, v_texcoord / 5.0);
    //gl_FragColor = vec4(color, 1.0);

}