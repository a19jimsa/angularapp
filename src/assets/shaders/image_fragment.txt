precision mediump float;

varying vec2 v_texcoord;
varying float v_height;

varying vec3 v_normal;
varying float v_depth;

uniform sampler2D u_texture;
uniform sampler2D u_splatmap;

void main() {
   vec2 pixelResolution = vec2(6144, 2048);
   vec2 pixelOffset = 1.0 / pixelResolution;
   vec2 padding = pixelOffset * 0.5;
   vec2 tileSize = vec2(1.0 / 6.0, 1.0 / 2.0);
   vec2 uv_leafs = fract(v_texcoord) * (tileSize - 2.0 * padding) + vec2(0.0, 0.0) * tileSize + padding;
   vec2 uv_sand = fract(v_texcoord) * (tileSize - 2.0 * padding)+ vec2(2.0, 1.0) * tileSize + padding;
   vec2 uv_snow = fract(v_texcoord) * (tileSize - 2.0 * padding) + vec2(2.0, 0.0) * tileSize + padding;
   vec2 uv_ground = fract(v_texcoord) * (tileSize - 2.0 * padding) + vec2(4.0, 0.0) * tileSize + padding;
   vec2 uv_rock = fract(v_texcoord) * (tileSize - 2.0 * padding) + vec2(1.0, 1.0) * tileSize + padding;
   vec3 lightDir = normalize(vec3(0, 3, 0));
   float light = dot(lightDir, v_normal * 2. - 1.0);

   //Debug normals
   //gl_FragColor = vec4(normalize(v_normal) * 0.5 + 0.5, 1.0);
   //gl_FragColor = vec4(color * (light * 0.5 + 0.5), 1);
   //vec3 color = vec3(0.3, 1, 0.1);

   vec4 leaf_color = texture2D(u_texture, uv_leafs);
   vec4 sand_color = texture2D(u_texture, uv_sand);
   vec4 snow_color = texture2D(u_texture, uv_snow);
   vec4 ground_color = texture2D(u_texture, uv_ground);
   vec4 rock_color = texture2D(u_texture, uv_rock);

   vec4 splat = texture2D(u_splatmap, v_texcoord / 5.0);

   vec4 result =
        leaf_color * splat.r +
        sand_color  * splat.g +
        snow_color  * splat.b +
        rock_color * splat.a;

   float factor = smoothstep(0.0, 0.0, v_depth);

   vec3 color = mix(vec3(0.7, 0.8, 0.9), result.rgb, factor);
   //gl_FragColor = vec4(color, 1.0);

   gl_FragColor = vec4(color.rgb * (light * 0.5 + 0.5), 1);
   //gl_FragColor = texture2D(u_splatmap, v_texcoord / 5.0);

}